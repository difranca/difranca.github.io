"use strict";(self.webpackChunkdifranca=self.webpackChunkdifranca||[]).push([[177],{7052:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>s});var a=t(5893),i=t(1151);const o={keywords:["throttle","debounce","javascript","event","programming","language","code","coding"],title:"Throttle and Debounce | JavaScript | Languages | Tech-Notes",sidebar_label:"Throttle and Debounce",description:"In an event-driven development, some events happen more often than we would like to handle. But it is possible to control the execution of handler functions."},l="Throttle and Debounce",r={id:"languages/javascript/throttle-debounce",title:"Throttle and Debounce | JavaScript | Languages | Tech-Notes",description:"In an event-driven development, some events happen more often than we would like to handle. But it is possible to control the execution of handler functions.",source:"@site/docs/tech/languages/javascript/throttle-debounce.md",sourceDirName:"languages/javascript",slug:"/languages/javascript/throttle-debounce",permalink:"/tech-notes/languages/javascript/throttle-debounce",draft:!1,unlisted:!1,editUrl:"https://github.com/difranca/difranca.github.io/blob/main/docs/tech/languages/javascript/throttle-debounce.md",tags:[],version:"current",frontMatter:{keywords:["throttle","debounce","javascript","event","programming","language","code","coding"],title:"Throttle and Debounce | JavaScript | Languages | Tech-Notes",sidebar_label:"Throttle and Debounce",description:"In an event-driven development, some events happen more often than we would like to handle. But it is possible to control the execution of handler functions."},sidebar:"tech",previous:{title:"JavaScript",permalink:"/tech-notes/languages/javascript"},next:{title:"Cheat Sheets",permalink:"/tech-notes/cheats"}},c={},s=[{value:"Throttle",id:"throttle",level:2},{value:"Implementation Example",id:"implementation-example",level:3},{value:"Debounce",id:"debounce",level:2},{value:"Implementation Example",id:"implementation-example-1",level:3},{value:"Comparison",id:"comparison",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"throttle-and-debounce",children:"Throttle and Debounce"}),"\n",(0,a.jsx)(n.p,{children:"In an event-driven development, some events happen more often than we would like to handle. Taking events in a browser as an example, this can occur while a user scrolls the window or repeatedly clicks the same button.\nFortunately, it is possible to control the execution of handler functions using some strategies such as throttle and debounce."}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h2,{id:"throttle",children:"Throttle"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A throttled function is called once per a certain amount of time;"}),"\n",(0,a.jsx)(n.li,{children:"Any additional function calls within the specified time interval are ignored;"}),"\n",(0,a.jsx)(n.li,{children:"Throttle works as a valve which controls the flow rate function executions."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"implementation-example",children:"Implementation Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"/**\nReturns a throttled version of the provided callback.\nThe returned function will call the callback only once within the specified timeout.\nSubsequent calls made within the timeout will be ignored.\n@param {Function} callback - The callback function to throttle.\n@param {Number} [timeout=500] - The timeout in milliseconds.\n@returns {Function} - The throttled version of the provided callback.\n*/\nfunction throttle(callback, timeout = 500) {\n  let waiting = false;\n  return (...args) => {\n    if (!waiting) {\n      callback(...args);\n      waiting = true;\n      setTimeout(() => {\n        waiting = false;\n      }, timeout);\n    }\n  };\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Callback is the function that needs to be throttled and timeout is the throttle waiting time in milliseconds."}),"\n",(0,a.jsx)(n.p,{children:"This function can be used as follow:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const throttledFunction = throttle((arg1, arg2) => myFunction(arg1, arg2), 300);\n"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h2,{id:"debounce",children:"Debounce"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A debounced function is called after a certain amount of time passed since its last call;"}),"\n",(0,a.jsx)(n.li,{children:"It implies a delay between the event and the handler function call."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"implementation-example-1",children:"Implementation Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"/**\nReturns a debounced version of the provided callback.\nThe returned function will call the callback only if it hasn't been called again within the specified timeout.\nIf a subsequent call is made within the timeout, the timer is reset and the callback is called again only after the timeout.\n@param {Function} callback - The callback function to debounce.\n@param {Number} [timeout=500] - The timeout in milliseconds.\n@returns {Function} - The debounced version of the provided callback.\n*/\nfunction debounce(callback, timeout = 500) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      callback(...args);\n    }, timeout);\n  };\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Callback is the function that needs to be debounced and timeout is the waiting time in milliseconds that the function needs to wait to be called again since last call."}),"\n",(0,a.jsx)(n.p,{children:"This function can be used as follow:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const debouncedFunction = debounce((arg1, arg2) => myFunction(arg1, arg2), 300);\n"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h2,{id:"comparison",children:"Comparison"}),"\n",(0,a.jsx)(n.p,{children:"Below is an example of the implementation of both throttle and debounce, making it possible to compare how each one handles function calls."}),"\n",(0,a.jsx)("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"JS Debouncer",src:"https://codepen.io/difranca/embed/OJzqeKE?default-tab=js%2Cresult&editable=true",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true",children:(0,a.jsxs)(n.p,{children:["See the Pen ",(0,a.jsx)("a",{href:"https://codepen.io/difranca/pen/OJzqeKE",children:"\nJS Debouncer"})," by difranca (",(0,a.jsx)("a",{href:"https://codepen.io/difranca",children:"@difranca"}),")\non ",(0,a.jsx)("a",{href:"https://codepen.io",children:"CodePen"}),"."]})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsx)(n.p,{children:"There are JavaScript utility libraries that already implement throttle and debounce functions, such as:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://underscorejs.org",children:"Underscore.js"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://lodash.com",children:"Lodash"})}),"\n"]})]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.admonition,{title:"More Information",type:"note",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://redd.one/blog/debounce-vs-throttle",children:"https://redd.one/blog/debounce-vs-throttle"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.freecodecamp.org/news/javascript-debounce-example/",children:"https://www.freecodecamp.org/news/javascript-debounce-example/"})}),"\n"]})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>l});var a=t(7294);const i={},o=a.createContext(i);function l(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);